AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EnvType:
    Description: Specify the Environment type of the stack.
    Type: String
    AllowedValues:
      - test
      - prod
    Default: test
    ConstraintDescription: Specify either test or prod.
Conditions:
  IsProduction: !Equals 
    - !Ref EnvType
    - prod
  IsTest: !Equals 
    - !Ref EnvType
    - test

Resources:
############################################################
#    VPC
############################################################
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
      - Key: Name
        Value: myVPC

############################################################
#  Internet  GW
############################################################
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
        - Key: Network
          Value: Public

  AttachGatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        !Ref myVPC
      InternetGatewayId:
        !Ref InternetGateway
############################################################
#    PublicSubnet 10.10.1.0
############################################################
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: myVPC
      CidrBlock: 10.10.1.0/24
      Tags:
      - Key: Name
        Value: PublicSubnet

  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: Name
        Value: PublicSubnetRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable

############################################################
#    Nat PublicSubnet
############################################################
  NATGateway:
     Type: AWS::EC2::NatGateway
     Properties:
        AllocationId: !GetAtt NATGatewayEIP.AllocationId
        SubnetId: !Ref PrivateSubnet

  NATGatewayEIP:
     Type: AWS::EC2::EIP
     Properties:
        Domain: myVPC

############################################################
#    PublicSubnet
############################################################
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.10.2.0/24
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
        VpcId:
          Ref: myVPC
        Tags:
          - Key: Name
            Value: PrivateSubnetRouteTable

  PrivateInternetRoute:
    DependsOn: NATGateway
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateSubnetRouteTable

############################################################
#    dbSubnet
############################################################
  dbSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.10.3.0/24
      Tags:
      - Key: Name
        Value: dbSubnet

  dbSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
        - Key: Name
          Value: dbSubnetRouteTable

#  dbSubnetRoute:
#    Type: AWS::EC2::Route
#    Properties:
#      RouteTableId: !Ref dbSubnetRouteTable
#      DestinationCidrBlock: 10.10.3.0/24
#      GatewayId: !Ref NATGateway
#
  dbSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref dbSubnet
      RouteTableId: !Ref dbSubnetRouteTable

############################################################
#    Test Hosts
############################################################
  #Access key
  myKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: myKP

  Bastion:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-05fa00d4c63e32376
      KeyName:
        Ref: "myKeyPair"
      InstanceType: !If [IsProduction, t2.micro, !If [IsTest, t1.micro, ""]]
      NetworkInterfaces:
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
#        GroupSet:
#          - Ref: "myVPCEC2SecurityGroup"
        SubnetId:
          Ref: "PublicSubnet"
      Tags:
        - Key: Name
          Value: Bastion

  DB:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-05fa00d4c63e32376
      KeyName:
        Ref: "myKeyPair"
      InstanceType: !If [IsProduction, t2.micro, !If [IsTest, t1.micro, ""]]
      NetworkInterfaces:
      - AssociatePublicIpAddress: "false"
        DeviceIndex: "0"
#        GroupSet:
#          - Ref: "myVPCEC2SecurityGroup"
        SubnetId:
          Ref: "dbSubnet"
      Tags:
        - Key: Name
          Value: DB

  Prv:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-05fa00d4c63e32376
      KeyName:
        Ref: "myKeyPair"
      InstanceType: !If [IsProduction, t2.micro, !If [IsTest, t1.micro, ""]]
      NetworkInterfaces:
      - AssociatePublicIpAddress: "false"
        DeviceIndex: "0"
#        GroupSet:
#          - Ref: "myVPCEC2SecurityGroup"
        SubnetId:
          Ref: "PrivateSubnet"
      Tags:
        - Key: Name
          Value: Prv

#  Vp:
#    Type: 'AWS::EC2::Instance'
#    Properties:
#      ImageId: ami-05fa00d4c63e32376
#      KeyName:
#        Ref: "myKeyPair"
#      InstanceType: !If [IsProduction, t2.micro, !If [IsTest, t1.micro, ""]]
#      NetworkInterfaces:
#      - AssociatePublicIpAddress: "true"
#        DeviceIndex: "0"
##        GroupSet:
##          - Ref: "myVPCEC2SecurityGroup"
##        SubnetId:
##          Ref: myVPC
#      Tags:
#        - Key: Name
#          Value: Vp


Outputs:
#  VpIP:
#    Description: The Instance IP
#    Value: !GetAtt Vp.PublicIp
  BastionIp:
    Description: The Instance IP
    Value: !GetAtt Bastion.PublicIp
  DBIp:
    Description: The Instance IP
    Value: !GetAtt DB.PrivateIp
  PrvIp:
    Description: The Instance IP
    Value: !GetAtt Prv.PrivateIp
#  InstanceID:
#    Description: The Instance ID
#    Value: !Ref Bastion
